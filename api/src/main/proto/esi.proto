// Copyright 2019 SolarNetwork Foundation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package solarnetwork.esi.service;

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_outer_classname = "EsiServiceProto";
option java_package = "net.solarnetwork.esi.service";
option objc_class_prefix = "ESI";

import "google/protobuf/empty.proto";
import "esi-datum-request.proto";
import "esi-der-program.proto";
import "esi-der-resource-characteristics.proto";
import "esi-power-parameters.proto";
import "esi-power-profile-datum.proto";
import "esi-price-components.proto";
import "esi-price-datum.proto";
import "esi-price-map.proto";
import "esi-price-map-offer.proto";
import "esi-price-map-offer-feedback.proto";
import "esi-price-map-offer-response.proto";
import "esi-price-map-offer-status.proto";
import "esi-price-map-offer-status-response.proto";
import "esi-price-parameters.proto";
import "esi-uuid.proto";

// The ESI facility service API, where a facility is something that manages energy resources.
service DerFacilityService {

  // Query to get the DER characteristics of this service.
  rpc GetDerResourceCharacteristics(google.protobuf.Empty) returns (solarnetwork.esi.domain.DerResourceCharacteristics);

  // Query for list of available price maps.
  rpc ListPriceMaps(google.protobuf.Empty) returns (stream solarnetwork.esi.domain.PriceMap);
  
  // Propose a price map offer for the service to accept, reject, or propose a counter offer.
  rpc ProposePriceMapOffer(solarnetwork.esi.domain.PriceMapOffer) returns (solarnetwork.esi.domain.PriceMapOfferResponse);
  
  // Get the status of a price map offer.
  rpc GetPriceMapOfferStatus(solarnetwork.esi.domain.Uuid) returns (solarnetwork.esi.domain.PriceMapOfferStatus);
  
  // Provide feedback on a price map offer, after the offer event is over.
  rpc ProvidePriceMapOfferFeedback(solarnetwork.esi.domain.PriceMapOfferFeedback) returns (solarnetwork.esi.domain.PriceMapOfferFeedback);
  
  // Query for list of power profile datum over a time range.
  rpc ListPowerProfile(solarnetwork.esi.domain.DatumRequest) returns (stream solarnetwork.esi.domain.PowerProfileDatum);

  // Get the power parameters currently used by the service.
  rpc GetPowerParameters(google.protobuf.Empty) returns (solarnetwork.esi.domain.PowerParameters);
  
  // Set the power parameters, and return the power parameters active after the request, which may or may
  // not have been changed by the request metrics if the service cannot or refuses to change them.
  rpc SetPowerParameters(solarnetwork.esi.domain.PowerParameters) returns (solarnetwork.esi.domain.PowerParameters);

  // Get the price metrics currently used by the service.
  rpc GetPriceParameters(google.protobuf.Empty) returns (solarnetwork.esi.domain.PriceParameters);
  
  // List the supported program types.
  rpc ListSupportedDerPrograms(google.protobuf.Empty) returns (stream solarnetwork.esi.domain.DerProgram);

  // Provide pricing data to the facility.
  rpc ProvidePrices(stream solarnetwork.esi.domain.PriceDatum) returns (google.protobuf.Empty);

}

// The ESI operator service API, where an operator is something that manages the energy system that
// facilities interact with.
service DerOperatorService {
	
  // Inform the operator on a facility's price map offer status.
  // 
  // The facility should call this method at a minimum once the price map offer event completes.
  // It may choose to call this method when transitioning to different status values over the
  // course of an event.
  rpc ProvidePriceMapOfferStatus(solarnetwork.esi.domain.PriceMapOfferStatus) returns (solarnetwork.esi.domain.PriceMapOfferStatusResponse);
	
  // Query for list of price datum over a time range.
  //
  // The facility can call this method to find current or optionally future predicted grid price
  // details. For the current grid price, the request should 
  rpc ListPrices(solarnetwork.esi.domain.DatumRequest) returns (stream solarnetwork.esi.domain.PriceDatum);

}
